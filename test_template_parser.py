#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –ø–∞—Ä—Å–µ—Ä–∞ —Ç–æ–ª—å–∫–æ –Ω–∞ —à–∞–±–ª–æ–Ω–∞—Ö
"""
import asyncio
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(str(Path(__file__).parent))

from services.hybrid_parser import template_parser

async def test_parser():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–∞—Ä—Å–µ—Ä –Ω–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–∞—Ö –ø—Ä–∞–π—Å–æ–≤"""
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_cases = [
        {
            "name": "iPhone –ø—Ä–∞–π—Å—ã",
            "text": """üá∫üá∏16 128 White - 58900
13 128 Midnight - 38000üáÆüá≥
15Pro 128 Blue - 78500üá¶üá™
16 Plus 128 Teal üáÆüá≥ 60200"""
        },
        {
            "name": "MacBook –ø—Ä–∞–π—Å—ã",
            "text": """üá∫üá∏ MGND3 - 8/256 Gold ‚Äî 62.000‚ÇΩ
MW0Y3 13" M4 10/8 16 256GB Starlight - 80.000
MacBook Air 13 M3: 8/256GB Gray - 69000"""
        },
        {
            "name": "–°–º–µ—à–∞–Ω–Ω—ã–µ –ø—Ä–∞–π—Å—ã",
            "text": """iPhone 13 128GB Black üá∫üá∏ 35000
MacBook Air 13 M2 8/256GB Silver 65000üáØüáµ
iPad Pro 11 M4 256GB Space Black 85000üá∞üá∑
–ù–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–µ–º–∞—è —Å—Ç—Ä–æ–∫–∞ –±–µ–∑ —Ü–µ–Ω—ã
–ì–∞—Ä–∞–Ω—Ç–∏—è 1 –≥–æ–¥ - –Ω–µ —Ç–æ–≤–∞—Ä"""
        },
        {
            "name": "–¢–æ–ª—å–∫–æ –Ω–µ—Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–µ–º—ã–µ —Å—Ç—Ä–æ–∫–∏",
            "text": """–ü—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç –±–µ–∑ –ø—Ä–∞–π—Å–æ–≤
–ï—â–µ –æ–¥–Ω–∞ —Å—Ç—Ä–æ–∫–∞
–ò –µ—â–µ –æ–¥–Ω–∞"""
        }
    ]
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä—Å–µ—Ä–∞ —Ç–æ–ª—å–∫–æ –Ω–∞ —à–∞–±–ª–æ–Ω–∞—Ö\n")
    
    for i, test_case in enumerate(test_cases, 1):
        print(f"üìã –¢–µ—Å—Ç {i}: {test_case['name']}")
        print(f"–í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:\n{test_case['text']}\n")
        
        try:
            results = await template_parser.parse_message(test_case['text'], "–¢–µ—Å—Ç")
            
            print("–†–µ–∑—É–ª—å—Ç–∞—Ç:")
            print(results['summary'])
            print("\n" + "="*50 + "\n")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            print("\n" + "="*50 + "\n")

if __name__ == "__main__":
    asyncio.run(test_parser())
