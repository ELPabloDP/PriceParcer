#!/usr/bin/env python3
import sys
sys.path.append('.')

from parsers.ipad_parser import iPadParser

def test_ipad_parser():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç iPad –ø–∞—Ä—Å–µ—Ä –Ω–∞ –≤—Å–µ—Ö iPad —Å—Ç—Ä–æ–∫–∞—Ö –∏–∑ exampleprices.txt"""
    
    # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ —Ü–µ–Ω
    try:
        with open('bot/exampleprices.txt', 'r', encoding='utf-8') as f:
            content = f.read()
    except FileNotFoundError:
        print("‚ùå –§–∞–π–ª bot/exampleprices.txt –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    # –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —Å—Ç—Ä–æ–∫–∏
    lines = [line.strip() for line in content.split('\n') if line.strip()]
    
    # –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ iPad —Å—Ç—Ä–æ–∫–∏
    ipad_lines = []
    for line in lines:
        line_lower = line.lower()
        # –î–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å iPad –∏ –Ω–µ –±—ã—Ç—å AirPods, Dyson, Mac, Watch –∏ —Ç.–¥.
        if 'ipad' in line_lower and not any(keyword in line_lower for keyword in [
            'airpods', 'dyson', 'mac', 'watch', 'aw ', 'pixel', 'galaxy', 'pencil', 'airtag', 
            'adapter', 'magic', 'mouse', 'keyboard', 'google', 'samsung'
        ]):
            ipad_lines.append(line)
    
    print(f"üì± –ù–∞–π–¥–µ–Ω–æ {len(ipad_lines)} iPad —Å—Ç—Ä–æ–∫ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    for i, line in enumerate(ipad_lines, 1):
        print(f"  {i:3d}. {line}")
    
    print(f"\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º iPad –ø–∞—Ä—Å–µ—Ä:")
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞—Ä—Å–µ—Ä
    ipad_parser = iPadParser()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥—É—é —Å—Ç—Ä–æ–∫—É
    parsed_count = 0
    unparsed_lines = []
    
    for i, line in enumerate(ipad_lines, 1):
        result = ipad_parser._parse_single_line(line)
        if result:
            print(f"  ‚úÖ {i:3d}. {line}")
            print(f"      –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
            parsed_count += 1
        else:
            print(f"  ‚ùå {i:3d}. {line}")
            unparsed_lines.append(line)
    
    print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
    print(f"  ‚úÖ –†–∞—Å–ø–æ–∑–Ω–∞–Ω–æ: {parsed_count}/{len(ipad_lines)} ({parsed_count/len(ipad_lines)*100:.1f}%)")
    print(f"  ‚ùå –ù–µ—Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–æ: {len(unparsed_lines)}")
    
    if unparsed_lines:
        print(f"\n‚ùå –ù–ï–†–ê–°–ü–û–ó–ù–ê–ù–ù–´–ï –°–¢–†–û–ö–ò ({len(unparsed_lines)}):")
        for i, line in enumerate(unparsed_lines, 1):
            print(f"   {i:2d}. {line}")
        print(f"\nüîß –ù–£–ñ–ù–û –î–û–ë–ê–í–ò–¢–¨ –ü–ê–¢–¢–ï–†–ù–´ –î–õ–Ø {len(unparsed_lines)} –°–¢–†–û–ö")
        print("–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –Ω–µ—Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ –∏ –¥–æ–±–∞–≤—å—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ regex –ø–∞—Ç—Ç–µ—Ä–Ω—ã –≤ ipad_parser.py")
    else:
        print(f"\nüéâ –û–¢–õ–ò–ß–ù–û! iPad –ø–∞—Ä—Å–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ 100%!")

if __name__ == "__main__":
    test_ipad_parser()

